name: Release

on:
  workflow_dispatch: # Run on manual trigger

jobs:
  semantic-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write # to be able to publish a GitHub release
      issues: write # to be able to comment on released issues
      pull-requests: write # to be able to comment on released pull requests
      id-token: write # to enable use of OIDC for npm provenance
    outputs:
      new_release_git_tag: ${{ steps.semantic.outputs.new_release_git_tag }}
      new_release_version: ${{ steps.semantic.outputs.new_release_version }}
      new_release_notes: ${{ steps.semantic.outputs.new_release_notes }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v4
        id: semantic
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          dry_run: true

  #########################################################################################
  ## Build RPMs
  #########################################################################################
  rpm-rocky:
    runs-on: ubuntu-latest
    needs: semantic-release
    strategy:
      matrix:
        version: [ 8, 9 ]
    outputs:
      new_release_git_tag: ${{ needs.semantic-release.outputs.new_release_git_tag }}
      new_release_version: ${{ needs.semantic-release.outputs.new_release_version }}
      new_release_notes: ${{ needs.semantic-release.outputs.new_release_notes }}
    env:
      RELEASE_VERSION: ${{ needs.semantic-release.outputs.new_release_git_tag }}
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - uses: actions/checkout@v4
        with:
          path: check_netgear
          fetch-depth: 0

      - name: Build Mock Environment
        uses: docker/build-push-action@v6
        with:
          tags: mock:latest
          file: check_netgear/.github/workflows/Dockerfile
          context: .
          pull: true
          push: false
          load: true

      - name: Set Variables
        id: vars
        run: |
          pushd .
          cd check_netgear
          echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          echo "branch=$(echo ${{ github.ref_name }} | tr / __)" >> $GITHUB_OUTPUT
          popd

      - name: Build RPM
        run: |
          sed -i "s/0.0.0/${{ needs.semantic-release.outputs.new_release_version }}/g" check_netgear/nagios-plugins-netgear.spec
          echo "${{ needs.semantic-release.outputs.new_release_notes }}"
          check_netgear/.github/workflows/rpm_changelog.sh check_netgear/CHANGELOG.md check_netgear/nagios-plugins-netgear.spec
          cat check_netgear/nagios-plugins-netgear.spec
          mkdir mock
          docker run --privileged --cap-add=SYS_ADMIN -t --rm -v $PWD/check_netgear:/root/check_netgear -v $PWD/mock:/var/lib/mock mock:latest sh -c "mock -r rocky+epel-${{ matrix.version }}-x86_64 --spec /root/check_netgear/nagios-plugins-netgear.spec --sources /root/check_netgear"

      - name: Update package cache on every commit
        uses: actions/cache@v4
        with:
          path: package
          key: package-rpms-${{ github.run_id }}-rl${{ matrix.version }}
          restore-keys: package

      - name: Prepare package*.zip artifact
        run: |
          rm -rf package
          mkdir -p package
          rm -rf package/*.zip
          cp -f mock/rocky+epel-${{ matrix.version }}-x86_64/result/nagios-plugins-netgear*.rpm package/
          cd ./package

      - name: Upload RPM
        uses: actions/upload-artifact@v4
        with:
          name: check_netgear-rpms-rl${{ matrix.version }}-x86_64
          path: ./package

  #########################################################################################
  ## Prepare and create release artifacts
  #########################################################################################
  release-artifacts-rocky-rpm:
    runs-on: ubuntu-latest
    needs: rpm-rocky
    strategy:
      matrix:
        version: [ 8, 9 ]

    permissions:
      contents: write
      pages: write
      id-token: write
    outputs:
      new_release_git_tag: ${{ needs.rpm-rocky.outputs.new_release_git_tag }}
      new_release_version: ${{ needs.rpm-rocky.outputs.new_release_version }}
      new_release_notes: ${{ needs.rpm-rocky.outputs.new_release_notes }}

    steps:
      - uses: actions/checkout@v4

      - name: Update package cache on every commit
        uses: actions/cache@v4
        with:
          path: package
          key: package-rpms-${{ github.run_id }}-rl${{ matrix.version }}
          restore-keys: package

      - name: Release artifacts
        uses: softprops/action-gh-release@v2.0.8
        with:
          tag_name: ${{ needs.rpm-rocky.outputs.new_release_git_tag }}
          name: ${{ needs.rpm-rocky.outputs.new_release_version }}
          body: ${{ needs.rpm-rocky.outputs.new_release_notes }}
          files: |
            package/*
